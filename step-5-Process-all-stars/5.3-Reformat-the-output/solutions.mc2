// Storing the token into a variable
@HELLOEXOWORLD/GETREADTOKEN 'token' STORE 

// FETCH
[ 
    $token                              // Application authentication
    'sap.flux'                          // selector for classname
    {}                                  // Selector for labels
    '2009-05-02T00:56:10.000000Z'       // Start date
    '2013-05-11T12:02:06.000000Z'       // End date
] 
FETCH

// Apply Timeclip on each stars series
<%
    // Delete index
    DROP
    
    //
    // TIMESPLIT block:
    //

    // Quiesce period
    6 h

    // Minimal numbers of points per series 
    100

    // Labels for each splitted series
    'record'

    TIMESPLIT
%>
LMAP

// Flatten list of list of TIMESPLIT
FLATTEN

//
// FILTER block:
//

// Store a labels map selector
{ 'record' '~[2-5]' } 'labelsSelector' STORE

// FILTER Framework
[
    SWAP                            // Series list or Singleton
    []                              // Labels to compute equivalence class
    $labelsSelector                 // Labels map for selector
    filter.bylabels                 // Filter function operator 
]
FILTER

//
// BUCKETIZE block:
//

// BUCKETIZE Framework
[
    SWAP                                // Series list or Singleton
    bucketizer.min                      // Bucketize function operator
    0                                   // Lastbucket         
    2 h                                 // Bucketspan
    0                                   // Bucketcount
]
BUCKETIZE
UNBUCKETIZE

'sampledSeries' STORE

[
    $sampledSeries                      // Series list or singleton minuend

    //
    // MAP block: Compute moving mean 
    //

    [
        $sampledSeries                  // Series list or Singleton
        mapper.mean                     // Mapper function operator
        5                               // Pre
        5                               // Post
        0                               // Occurences
    ]
    MAP                                 // Series list or singleton subtrahend

    [ 'KEPLERID' 'record' ]             // Labels to compute equivalence class
    op.sub                              // Apply function operator
]
APPLY

// 
// Threshold
//

[ SWAP [] -15.0 mapper.lt 0 0 0 ] MAP 

// 
// Print initial series and annotations
//

[ SWAP mapper.toboolean 0 0 0 ] MAP

//
// Reformat annotations series
//

<%
    // Delete index
    DROP

    // Duplicate series on top of the stack
    DUP

    // Get series name
    NAME

    // Add annotations suffix
    '-annotations' +

    // RENAME the series on top of the stack
    RENAME
%>
LMAP

$sampledSeries

//
// Split the end record in several stack elements. One elements for each record of each stars containing a list of the record series with its corresponding annotations series 
//

// Merge both series on top of the stack
APPEND
[ 'KEPLERID' 'record' ]

// Generaten equivalence map containing base on KEPLERID and record labels
PARTITION

// Delete each map keys to keep only the list values 
<%
    SWAP DROP
%>
FOREACH